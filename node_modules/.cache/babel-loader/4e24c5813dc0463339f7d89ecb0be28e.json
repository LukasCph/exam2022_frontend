{"ast":null,"code":"import{myUrl}from\"./settings\";var URL=myUrl;function handleHtttpErrors(res){if(!res.ok){return Promise.reject({status:res.status,fullError:res.json()});}return res.json();}function apiFacade(){var login=function login(user,password){var options=makeOptions(\"POST\",true,{username:user,password:password});return fetch(URL+\"/api/login\",options).then(handleHtttpErrors).then(function(res){setToken(res.token);sessionStorage.setItem(\"username\",user);}).catch(function(error){console.log(error);});};var fetchAny=function fetchAny(someUrl){var options=makeOptions(\"GET\",true);return fetch(URL+someUrl,options).then(handleHtttpErrors);};var setToken=function setToken(token){sessionStorage.setItem(\"jwtToken\",token);var jwtData=token.split(\".\")[1];var decodedJwtJsonData=window.atob(jwtData);var decodedJwtData=JSON.parse(decodedJwtJsonData);var roles=decodedJwtData.roles;sessionStorage.setItem(\"roles\",JSON.stringify(roles));};var getToken=function getToken(){return sessionStorage.getItem(\"jwtToken\");};var loggedIn=function loggedIn(){var loggedIn=getToken()!==null;return loggedIn;};var logout=function logout(){sessionStorage.removeItem(\"jwtToken\");sessionStorage.removeItem(\"username\");sessionStorage.removeItem(\"roles\");};var makeOptions=function makeOptions(method,addToken,body){var opts={method:method,headers:{\"Content-type\":\"application/json\",Accept:\"application/json\"}};if(addToken&&loggedIn()){opts.headers[\"x-access-token\"]=getToken();}if(body){opts.body=JSON.stringify(body);}return opts;};return{makeOptions:makeOptions,setToken:setToken,getToken:getToken,loggedIn:loggedIn,login:login,logout:logout,handleHtttpErrors:handleHtttpErrors,fetchAny:fetchAny};}export var facade=apiFacade();","map":{"version":3,"sources":["C:/Users/Alek/Dropbox/Dev/3.sem/24h_exam/24h_exam_frontend/src/apiFacade.js"],"names":["myUrl","URL","handleHtttpErrors","res","ok","Promise","reject","status","fullError","json","apiFacade","login","user","password","options","makeOptions","username","fetch","then","setToken","token","sessionStorage","setItem","catch","error","console","log","fetchAny","someUrl","jwtData","split","decodedJwtJsonData","window","atob","decodedJwtData","JSON","parse","roles","stringify","getToken","getItem","loggedIn","logout","removeItem","method","addToken","body","opts","headers","Accept","facade"],"mappings":"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","sourcesContent":["import { myUrl } from \"./settings\";\r\n\r\nconst URL = myUrl;\r\nfunction handleHtttpErrors(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject({ status: res.status, fullError: res.json() });\r\n  }\r\n\r\n  return res.json();\r\n}\r\nfunction apiFacade() {\r\n  const login = (user, password) => {\r\n    const options = makeOptions(\"POST\", true, {\r\n      username: user,\r\n      password: password,\r\n    });\r\n\r\n    return fetch(URL + \"/api/login\", options)\r\n      .then(handleHtttpErrors)\r\n      .then((res) => {\r\n        setToken(res.token);\r\n        sessionStorage.setItem(\"username\", user);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchAny = (someUrl) => {\r\n    const options = makeOptions(\"GET\", true);\r\n    return fetch(URL + someUrl, options).then(handleHtttpErrors);\r\n  };\r\n  const setToken = (token) => {\r\n    sessionStorage.setItem(\"jwtToken\", token);\r\n\r\n    const jwtData = token.split(\".\")[1];\r\n    const decodedJwtJsonData = window.atob(jwtData);\r\n    const decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n\r\n    const roles = decodedJwtData.roles;\r\n    sessionStorage.setItem(\"roles\", JSON.stringify(roles));\r\n  };\r\n  const getToken = () => {\r\n    return sessionStorage.getItem(\"jwtToken\");\r\n  };\r\n  const loggedIn = () => {\r\n    const loggedIn = getToken() !== null;\r\n    return loggedIn;\r\n  };\r\n  const logout = () => {\r\n    sessionStorage.removeItem(\"jwtToken\");\r\n    sessionStorage.removeItem(\"username\");\r\n    sessionStorage.removeItem(\"roles\");\r\n  };\r\n\r\n  const makeOptions = (method, addToken, body) => {\r\n    let opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    if (addToken && loggedIn()) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  };\r\n  return {\r\n    makeOptions,\r\n    setToken,\r\n    getToken,\r\n    loggedIn,\r\n    login,\r\n    logout,\r\n    handleHtttpErrors,\r\n    fetchAny,\r\n  };\r\n}\r\nexport const facade = apiFacade();\r\n"]},"metadata":{},"sourceType":"module"}