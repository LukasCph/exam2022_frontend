{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alek\\\\Dropbox\\\\Dev\\\\3.sem\\\\24h_exam\\\\24h_exam_frontend\\\\src\\\\components\\\\Signup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react'; // Facade\n\nimport { facade } from '../../apiFacade';\nimport { signup } from '../../settings'; // Styles\n\nimport { Wrapper, StyledFormWrapper, StyledForm, StyledInput, StyledButton, StyledError } from './Signup.styles'; //Router\n\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup(_ref) {\n  _s();\n\n  let {\n    setLoginCredentials,\n    setLoggedIn\n  } = _ref;\n  const [response, setResponse] = useState('');\n  const [signupCredentials, setSignupCredentials] = useState({});\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    setSignupCredentials({ ...signupCredentials,\n      [e.target.id]: e.target.value\n    }); // console.log(signupCredentials);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await facade.signup(signupCredentials.username, signupCredentials.password);\n\n    if (response.status === 'success') {\n      facade.login(signupCredentials.username, signupCredentials.password).then(() => {\n        if (sessionStorage.getItem('username') && facade.loggedIn) {\n          setLoginCredentials(signupCredentials);\n          setLoggedIn(true);\n          navigate('/');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(StyledFormWrapper, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n          placeholder: \"User Name\",\n          id: \"username\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          placeholder: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), response.message && /*#__PURE__*/_jsxDEV(StyledError, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: handleSubmit,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"XNjTJEUKsyF6CXX771KSLN0G0bc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Alek/Dropbox/Dev/3.sem/24h_exam/24h_exam_frontend/src/components/Signup/index.js"],"names":["axios","React","useState","facade","signup","Wrapper","StyledFormWrapper","StyledForm","StyledInput","StyledButton","StyledError","useNavigate","Signup","setLoginCredentials","setLoggedIn","response","setResponse","signupCredentials","setSignupCredentials","navigate","handleChange","e","target","id","value","handleSubmit","preventDefault","username","password","status","login","then","sessionStorage","getItem","loggedIn","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB,C,CAEA;;AACA,SACEC,OADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,WANF,QAOO,iBAPP,C,CASA;;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,MAAT,OAAsD;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,GAAsC;AACpD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAMiB,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,OAACI,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AAFL,KAAD,CAApB,CAD0B,CAK1B;AACD,GAND;;AAQA,QAAMC,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMX,QAAQ,GAAG,MAAMZ,MAAM,CAACC,MAAP,CAAca,iBAAiB,CAACU,QAAhC,EAA0CV,iBAAiB,CAACW,QAA5D,CAAvB;;AACE,QAAIb,QAAQ,CAACc,MAAT,KAAoB,SAAxB,EAAmC;AACjC1B,MAAAA,MAAM,CACH2B,KADH,CACSb,iBAAiB,CAACU,QAD3B,EACqCV,iBAAiB,CAACW,QADvD,EAEGG,IAFH,CAEQ,MAAM;AACV,YAAIC,cAAc,CAACC,OAAf,CAAuB,UAAvB,KAAsC9B,MAAM,CAAC+B,QAAjD,EAA2D;AACzDrB,UAAAA,mBAAmB,CAACI,iBAAD,CAAnB;AACAH,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,UAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,OARH;AASD;AACJ,GAdD;;AAgBA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,WAAW,EAAC,WADd;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,WAAD;AACE,UAAA,WAAW,EAAC,UADd;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBANF,EAYGL,QAAQ,CAACoB,OAAT,iBACC,QAAC,WAAD;AAAA,iCACE;AAAA,sBAAIpB,QAAQ,CAACoB;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAiBE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAtDQb,M;UAGUD,W;;;KAHVC,M;AAwDT,eAAeA,MAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\n// Facade\r\nimport { facade } from '../../apiFacade';\r\nimport { signup } from '../../settings';\r\n\r\n// Styles\r\nimport {\r\n  Wrapper,\r\n  StyledFormWrapper,\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledButton,\r\n  StyledError,\r\n} from './Signup.styles';\r\n\r\n//Router\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Signup({ setLoginCredentials, setLoggedIn }) {\r\n  const [response, setResponse] = useState('');\r\n  const [signupCredentials, setSignupCredentials] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setSignupCredentials({\r\n      ...signupCredentials,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n    // console.log(signupCredentials);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await facade.signup(signupCredentials.username, signupCredentials.password);\r\n      if (response.status === 'success') {\r\n        facade\r\n          .login(signupCredentials.username, signupCredentials.password)\r\n          .then(() => {\r\n            if (sessionStorage.getItem('username') && facade.loggedIn) {\r\n              setLoginCredentials(signupCredentials);\r\n              setLoggedIn(true);\r\n              navigate('/');\r\n            }\r\n          });\r\n      }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledFormWrapper>\r\n        <StyledForm>\r\n          <StyledInput\r\n            placeholder=\"User Name\"\r\n            id=\"username\"\r\n            onChange={handleChange}\r\n          />\r\n          <StyledInput\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n          {response.message && (\r\n            <StyledError>\r\n              <p>{response.message}</p>\r\n            </StyledError>\r\n          )}\r\n          <StyledButton onClick={handleSubmit}>Sign up</StyledButton>\r\n        </StyledForm>\r\n      </StyledFormWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}